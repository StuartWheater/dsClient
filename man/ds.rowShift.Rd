% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.rowShift.R
\name{ds.rowShift}
\alias{ds.rowShift}
\title{Shifts a column up and down by a number of rows}
\usage{
ds.rowShift(x = NULL, datasources = NULL, newobj = NULL, shiftLen = 1L)
}
\arguments{
\item{x}{a character, the name of the vector to process.}

\item{datasources}{a list of opal object(s) obtained after login in to opal servers;
these objects hold also the data assign to R, as \code{dataframe}, from opal datasources.}

\item{newobj}{a character, the name of the new vector in which values have been shifted 
If no name is specified the default name is the name of the original vector followed by the suffix 
'.shift' e.g. 'LAB_HDL.shift' if the name of the vector is 'LAB_HDL'.}

\item{ShiftLen}{a positive or negative integer specifying the number of rows to
shift up or down by.}
}
\value{
a new vector or table structure with the shifted column is stored on the server side.
}
\description{
This function shifts a vector up or down by a number of rows specified
}
\details{
This function is used when the analyst needs to generate a new column
by shifting an existing column up or down by a number of rows. This is similar to a
lag function in SAS. A negative integer shifts the column down, a positive number
shifts the column up.
}
\examples{
{
  \dontrun{ 
  # load that contains the login details
  data(logindata)
  library(opal)

  # login and assign all the stored variables.
  opals <- datashield.login(logins=logindata,assign=TRUE)

  # shift variable 'LAB_HDL' down by 1 row
  ds.rowShift(x='D$LAB_HDL',shiftLen=-1)
  
  # shift variable 'LAB_HDL' up by 6 rows
  ds.rowShift(x='D$LAB_HDL',shiftLen=6)
  
  # clear the Datashield R sessions and logout
  datashield.logout(opals)
  }
}

}
\author{
Bishop, T.
}

